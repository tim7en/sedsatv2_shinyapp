#K -> z ->B ->X
#M -> D ->B ->X
#N -> D ->B ->X
#last node
x <<-list( "to" = "a", "from" = "b")
#Pipe node
b <<-list("to" = "x", "from" = "z", "from" = "d")
#Confluence nodes
z <<- list("to" = "b", "from" = "j", "from" = "k")
d <<-list("to" = "b","from" = "m","from" = "n")
#end nodes
j <<- list( "to" = "z", "from" = "none")
k <<- list("to" = "z", "from" = "none")
m <<- list("to" = "d", "from" = "none")
n <<- list("to" = "d","from" = "none")
#last node
x <<-list( "to" = "a", "from" = "b")
#Pipe node
b <<-list("to" = "x", "from" = "z", "from" = "d")
#Confluence nodes
z <<- list("to" = "b", "from" = "j", "from" = "k")
d <<-list("to" = "b","from" = "m","from" = "n")
#end nodes
j <<- list("to" = "z", "from" = "none")
k <<- list("to" = "z", "from" = "none")
m <<- list("to" = "d", "from" = "none")
n <<- list("to" = "d","from" = "none")
#last node
x <<-list( "to" = "a", "from" = "b")
#Pipe node
b <<-list("to" = "x", "from" = "z", "from" = "d")
#Confluence nodes
z <<- list("to" = "b", "from" = "j", "from" = "k")
d <<-list("to" = "b","from" = "m","from" = "h")
#end nodes
j <<- list("to" = "z", "from" = "none")
k <<- list("to" = "z", "from" = "none")
m <<- list("to" = "d", "from" = "none")
h <<- list("to" = "d","from" = "none")
#Total of 4 options available;
linkedList <- NULL
View(b)
x$from
b$from
z$from
b$from
b$from[1]
b$from[2]
install.packages ("hashmap")
library(hashmap)
H <- hashmap(c("x", "b", "f", "d"), rnorm(4))
H
H["x"]
H[x]
H[[x]]
H[["x"]]
H <- hashmap()
?hashmap
H[["x"]]
x <- hashmap(c("from", "to"), rnorm(c("A", "b")))
x
x <- hashmap(c("from", "to"), c("A", "b"))
x
x <- hashmap(c("to", "from"), c("A", "b"))
#Pipe node
b <<-hashmap(c("to", "from", "from"), c("x", "f", "d"))
x
b
deepParsing <- function (myvar){
myvar <- myvar * 3
if (myvar > 1e16) return ("DONE")
else
return (deepParsing(i))
}
f <- deepParsing(5)
deepParsing <- function (myvar){
myvar <- myvar * 3
if (myvar > 1e16) return ("DONE")
else
return (deepParsing(myvar))
}
f <- deepParsing(5)
deepParsing <- function (myvar){
myvar <- myvar * 3
if (myvar > 1e16) return ("DONE")
else
return (deepParsing(myvar))
}
f <- deepParsing(5)
deepParsing <- function (myvar){
myvar <- myvar * 3
if (myvar > 1e16)
print (myvar)
return ("DONE")
else
return (deepParsing(myvar))
}
f <- deepParsing(5)
deepParsing <- function (myvar){
myvar <- myvar * 3
if (myvar > 1e16)
print (myvar)
return ("DONE")
else
return (deepParsing(myvar))
}
deepParsing <- function (myvar){
myvar <- myvar * 3
if (myvar > 1e16) {
print (myvar)
return ("DONE")
}
else
return (deepParsing(myvar))
}
f <- deepParsing(5)
remotes::install_github(“ColumbusCollaboratory/photon”)
remotes::install_github("ColumbusCollaboratory/photon")
library(photon)
a <- ("n")
b <- ("n")
c <- ("a")
d <- ("b")
t1 <-("c")
t2 <- ("c")
t3 <- ("d")
t4 <- ("d")
t5 <- ("d")
n <- list (a, b, c, d, t1, t2, t3, t4, t5)
n
lst <- list(a = 1, b = list(c = 2, d = 3))
library(purrr)
assign_in(lst, list('b', 'd'), 5)
lst
lst
assign_in(lst, list('b', 'd'), 5)
lst <- list(a = 1, b = list(from = 2, from = 3))
library(purrr)
assign_in(lst, list('b', 'd'), 5)
library("rjson")
require (rjson)
require ("rjson")
knitr::opts_chunk$set(echo = TRUE)
library (sf)
library (data.table)
library (foreign)
library (jsonlite)
library (httr)
library (geosphere)
library (plyr)
library (dataRetrieval)
Nhd_table <- read.dbf ("GageLoc.dbf", as.is = T)
head (Nhd_table)
Nhd_shp <- st_read("GageLoc.shp")
head (Nhd_shp)
View(Nhd_shp)
Nhd_shp$geometry
max (Nhd_shp$Measure)
library (foreign)
library (geosphere)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
names (gages_ss)
View(gages_ss)
gages_navSS <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Nav.csv", stringsAsFactors = F)
View(gages_ss)
View(gages_navSS)
library (foreign)
library (geosphere)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_navSS <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Nav.csv", stringsAsFactors = F)
View(gages_navSS)
View(gages_ss)
View(gages_ss)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
#proximity networknav
dif_ss_navSS <- merge (gages_ss, gages_navSS, by = "id")
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "xcord","ycord", "COMID", "DrainageArea")
dif_navSS <- dif_ss_navSS[names_keep]
dif_navSS$nav_proxy <- 0
dif_navSS[dif_navSS==-9999] <- NA
for (i in seq (1, nrow (dif_nwis))){
dif_navSS$nav_proxy[i] <- distm(c(dif_navSS$long_ss[i], dif_navSS$lat_ss[i]), c(dif_navSS$xcord[i], dif_navSS$ycord[i]), fun = distHaversine)
}
for (i in seq (1, nrow (dif_navSS))){
dif_navSS$nav_proxy[i] <- distm(c(dif_navSS$long_ss[i], dif_navSS$lat_ss[i]), c(dif_navSS$xcord[i], dif_navSS$ycord[i]), fun = distHaversine)
}
View(dif_navSS)
names (dif_navSS) <- c("id", "agencyid", "long_ss", "lat_ss", "long_nav", "lat_nav", "comid_nav", "area_nav", "nav_proxy" )
plot (dif_navSS)
View(dif_navSS)
which (is.na (dif_ss_navSS$COMID))
View(dif_navSS)
plot (dif_navSS)
plot (dif_navSS$nav_proxy)
library (foreign)
library (geosphere)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nldi <- read.csv ("D:/GageComparison/Results/DB_Services/Nldi_gages.csv", stringsAsFactors = F)
library (foreign)
library (geosphere)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nldi <- read.csv ("D:/GageComparison/Results/DB_Services/Nldi_gages.csv", stringsAsFactors = F)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
library (foreign)
library (geosphere)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nldi <- read.csv ("D:/GageComparison/Results/DB_Services/Nldi_gages.csv", stringsAsFactors = F)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
##proximity for nldi
mystrsplit <- function (x) {
dat <- strsplit(x, "-")[[1]][2]
return (dat)
}
station <- unlist(lapply (gages_nldi$features.properties.identifier, mystrsplit))
gages_nldi$station <- station
dif_ss_nldi <- merge (gages_ss, gages_nldi, by.x = "id", by.y = "station")
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "features.properties.comid", "features.geometry.coordinates1", "features.geometry.coordinates2")
dif_nldi <- dif_ss_nldi[names_keep]
dif_nldi$nldi_proxy <- 0
dif_nldi[dif_nldi==-9999] <- NA
for (i in seq (1, nrow (dif_nldi))){
dif_nldi$nldi_proxy[i] <- distm(c(dif_nldi$long_ss[i], dif_nldi$lat_ss[i]), c(dif_nldi$features.geometry.coordinates1[i], dif_nldi$features.geometry.coordinates2[i]), fun = distHaversine)
}
names (dif_nldi) <- c("id", "agencyid", "long_ss", "lat_ss", "comid_nldi", "long_nldi","lat_nldi","nldi_proxy" )
library (foreign)
library (geosphere)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nldi <- read.csv ("D:/GageComparison/Results/DB_Services/Nldi_gages.csv", stringsAsFactors = F)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
##proximity for nldi
mystrsplit <- function (x) {
dat <- strsplit(x, "-")[[1]][2]
return (dat)
}
station <- unlist(lapply (gages_nldi$features.properties.identifier, mystrsplit))
gages_nldi$station <- station
dif_ss_nldi <- merge (gages_ss, gages_nldi, by.x = "id", by.y = "station", all = T)
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "features.properties.comid", "features.geometry.coordinates1", "features.geometry.coordinates2")
dif_nldi <- dif_ss_nldi[names_keep]
dif_nldi$nldi_proxy <- 0
dif_nldi[dif_nldi==-9999] <- NA
for (i in seq (1, nrow (dif_nldi))){
dif_nldi$nldi_proxy[i] <- distm(c(dif_nldi$long_ss[i], dif_nldi$lat_ss[i]), c(dif_nldi$features.geometry.coordinates1[i], dif_nldi$features.geometry.coordinates2[i]), fun = distHaversine)
}
names (dif_nldi) <- c("id", "agencyid", "long_ss", "lat_ss", "comid_nldi", "long_nldi","lat_nldi","nldi_proxy" )
View(dif_nldi)
View(gages_nldi)
plot (dif_nldi$nldi_proxy)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = F)
View(gages_ss)
View(gages_nwis)
#proximity nwis
dif_ss_nwis <- merge (gages_temp, gages_nwis, by.x = "id", by.y = "site_no")
dif_ss_nwis <- merge (gages_ss, dif_ss_nwis,by = "mergeid" )
names_keep <- c("id.x", "agencyID.x", "long_ss.x", "lat_ss.x", "dec_long_va","dec_lat_va", "drain_area_va")
dif_nwis <- dif_ss_nwis[names_keep]
dif_nwis$nwis_proxy <- 0
dif_nwis[dif_nwis==-9999] <- NA
for (i in seq (1, nrow (dif_nwis))){
dif_nwis$nwis_proxy[i] <- distm(c(dif_nwis$long_ss.x[i], dif_nwis$lat_ss.x[i]), c(dif_nwis$dec_long_va[i], dif_nwis$dec_lat_va[i]), fun = distHaversine)
}
names (dif_nwis) <- c("id", "agencyid", "long_ss", "lat_ss", "long_nwis", "lat_nwis", "area_nwis", "nwis_proxy")
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = F)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
#proximity nwis
dif_ss_nwis <- merge (gages_temp, gages_nwis, by.x = "id", by.y = "site_no")
dif_ss_nwis <- merge (gages_ss, dif_ss_nwis,by = "mergeid" )
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = F)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
View(gages_ss)
View(gages_nwis)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = T)
View(gages_nwis)
str (gages_nwis)
str (gages_nwis$site_no)
View(gages_nwis)
library (dataRetrieval)
View(gages_nwis)
View(gages_ss)
s <- as.array (gages_ss$id)
s
s[1]
s <- as.array (gages_ss$id[17:length (gages_ss)])
s
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
ss
s
s <- paste (s, ",")
s
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
s <- collapse (s, ",")
s
s <- paste (s, collapse = ",")
s
datas <- readNWISsite(s)
length (s)
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
s[15]
s,15
s[14]
s[13]
s[12]
s <- paste (s, collapse = ",")
datas <- readNWISsite(s[1:20000])
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
lnk1 <- paste (s[1:20000], collapse = ",")
lnk2 <- paste (s[20000:36470], collapse = ",")
s <- paste (lnk1, collapse = ",")
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
View(datas)
View(datas2)
datas <- rbind (datas, datas2)
write.csv (datas, "Nwis_table.csv")
datas <- read.csv ("Nwis_table.csv", stringsAsFactors = F)
View(datas)
datas <- read.csv ("Nwis_table.csv", stringsAsFactors = T)
View(datas)
datas[1]
datas$site_no[1]
datas$site_no[100]
datas$site_no[1000]
datas$site_no[10000]
min (datas$site_no)
max (datas$site_no)
View(datas2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
datas <- rbind (datas, datas2)
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
datas <- rbind (datas, datas2)
View(datas)
?write.csv
write.csv (datas, "Nwis_table.csv")
datas <- read.csv ("Nwis_table.csv", stringsAsFactors = T)
View(datas)
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
datas <- rbind (datas, datas2)
gages_nwis <- rbind (datas, datas2)
#proximity nwis
dif_ss_nwis <- merge (gages_ss, gages_nwis, by.x = "id", by.y = "site_no")
View(dif_ss_nwis)
names_keep <- c("id.x", "agencyID.x", "long_ss.x", "lat_ss.x", "dec_long_va","dec_lat_va", "drain_area_va")
names (dif_ss_nwis)
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "dec_long_va","dec_lat_va", "drain_area_va")
dif_nwis <- dif_ss_nwis[names_keep]
dif_nwis$nwis_proxy <- 0
dif_nwis[dif_nwis==-9999] <- NA
for (i in seq (1, nrow (dif_nwis))){
dif_nwis$nwis_proxy[i] <- distm(c(dif_nwis$long_ss.x[i], dif_nwis$lat_ss.x[i]), c(dif_nwis$dec_long_va[i], dif_nwis$dec_lat_va[i]), fun = distHaversine)
}
for (i in seq (1, nrow (dif_nwis))){
dif_nwis$nwis_proxy[i] <- distm(c(dif_nwis$long_ss[i], dif_nwis$lat_ss[i]), c(dif_nwis$dec_long_va[i], dif_nwis$dec_lat_va[i]), fun = distHaversine)
}
names (dif_nwis) <- c("id", "agencyid", "long_ss", "lat_ss", "long_nwis", "lat_nwis", "area_nwis", "nwis_proxy")
View(dif_nwis)
plot (dif_nwis)
#proximity nwis
dif_ss_nwis <- merge (gages_ss, gages_nwis, by.x = "id", by.y = "site_no", all = T)
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "dec_long_va","dec_lat_va", "drain_area_va")
dif_nwis <- dif_ss_nwis[names_keep]
dif_nwis$nwis_proxy <- 0
dif_nwis[dif_nwis==-9999] <- NA
for (i in seq (1, nrow (dif_nwis))){
dif_nwis$nwis_proxy[i] <- distm(c(dif_nwis$long_ss[i], dif_nwis$lat_ss[i]), c(dif_nwis$dec_long_va[i], dif_nwis$dec_lat_va[i]), fun = distHaversine)
}
names (dif_nwis) <- c("id", "agencyid", "long_ss", "lat_ss", "long_nwis", "lat_nwis", "area_nwis", "nwis_proxy")
View(dif_nwis)
str (gages_nwis$site_no)
str (gages_ss$id)
#proximity nwis
gages_ss$id <- trimws(gages_ss$id)
gages_nwis$site_no <- trimws (gages_nwis$site_no)
View(dif_ss_nwis)
dif_ss_nwis <- merge (gages_ss, gages_nwis, by.x = "id", by.y = "site_no", all = T)
#proximity nwis
gages_ss$id <- lapply(gages_ss$id, trimws)
gages_nwis$site_no <- lapply (gages_nwis$site_no, trimws)
View(dif_nwis)
View(gages_nwis)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = T)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
lnk1 <- paste (s[1:20000], collapse = ",")
lnk2 <- paste (s[20000:36470], collapse = ",")
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
gages_nwis <- rbind (datas, datas2)
#proximity nwis
gages_ss$id <- lapply(gages_ss$id, trimws)
gages_nwis$site_no <- lapply (gages_nwis$site_no, trimws)
dif_ss_nwis <- merge (gages_ss, gages_nwis, by.x = "id", by.y = "site_no", all = T)
View(gages_ss)
gages_ss$id
gages_ss$id[1]
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = T)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
lnk1 <- paste (s[1:20000], collapse = ",")
lnk2 <- paste (s[20000:36470], collapse = ",")
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
gages_nwis <- rbind (datas, datas2)
#proximity nwis
gages_ss$id <- unlist(lapply(gages_ss$id, trimws))
gages_nwis$site_no <- unlist(lapply (gages_nwis$site_no, trimws)
)
str (gages_ss$id)
dif_ss_nwis <- merge (gages_ss, gages_nwis, by.x = "id", by.y = "site_no", all = T)
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "dec_long_va","dec_lat_va", "drain_area_va")
dif_nwis <- dif_ss_nwis[names_keep]
dif_nwis$nwis_proxy <- 0
dif_nwis[dif_nwis==-9999] <- NA
for (i in seq (1, nrow (dif_nwis))){
dif_nwis$nwis_proxy[i] <- distm(c(dif_nwis$long_ss[i], dif_nwis$lat_ss[i]), c(dif_nwis$dec_long_va[i], dif_nwis$dec_lat_va[i]), fun = distHaversine)
}
names (dif_nwis) <- c("id", "agencyid", "long_ss", "lat_ss", "long_nwis", "lat_nwis", "area_nwis", "nwis_proxy")
View(dif_nwis)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = T)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
s <- as.array (gages_ss$id)
lnk1 <- paste (s[1:20000], collapse = ",")
lnk2 <- paste (s[20000:36470], collapse = ",")
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
gages_nwis <- rbind (datas, datas2)
#proximity nwis
gages_ss$id <- unlist(lapply(gages_ss$id, trimws))
gages_nwis$site_no <- unlist(lapply (gages_nwis$site_no, trimws))
dif_ss_nwis <- merge (gages_ss, gages_nwis, by.x = "id", by.y = "site_no", all = T)
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "dec_long_va","dec_lat_va", "drain_area_va")
dif_nwis <- dif_ss_nwis[names_keep]
dif_nwis$nwis_proxy <- 0
dif_nwis[dif_nwis==-9999] <- NA
for (i in seq (1, nrow (dif_nwis))){
dif_nwis$nwis_proxy[i] <- distm(c(dif_nwis$long_ss[i], dif_nwis$lat_ss[i]), c(dif_nwis$dec_long_va[i], dif_nwis$dec_lat_va[i]), fun = distHaversine)
}
names (dif_nwis) <- c("id", "agencyid", "long_ss", "lat_ss", "long_nwis", "lat_nwis", "area_nwis", "nwis_proxy")
head (gages_ss)
View(gages_ss)
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = T)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
lnk1 <- paste (s[1:20000], collapse = ",")
lnk2 <- paste (s[20000:length (gages_ss$id)], collapse = ",")
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
gages_nwis <- rbind (datas, datas2)
lnk2[16471]
View(gages_ss)
any (is.na(gages_ss$id))
gages_ss <- read.csv ("D:/GageComparison/Results/DB_Services/SS_Gages.csv", stringsAsFactors = F)
gages_nwis <- read.csv ("D:/GageComparison/Results/DB_Services/Nwis_table.csv", stringsAsFactors = T)
names(gages_ss)[c(8:9)] <- c("long_ss", "lat_ss")
s <- as.array (gages_ss$id[17:length (gages_ss$id)])
lnk1 <- paste (s[1:20000], collapse = ",")
lnk2 <- paste (s[20000:length (gages_ss$id)], collapse = ",")
lnk1
lnk2
lnk2 <- paste (s[20000:(length (gages_ss$id)-17)], collapse = ",")
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas <- readNWISsite(lnk1)
datas2 <- readNWISsite(lnk2)
datas$site_no <- as.character (datas$site_no)
datas2$site_no <- as.character (datas2$site_no)
gages_nwis <- rbind (datas, datas2)
#proximity nwis
gages_ss$id <- unlist(lapply(gages_ss$id, trimws))
gages_nwis$site_no <- unlist(lapply (gages_nwis$site_no, trimws))
dif_ss_nwis <- merge (gages_ss, gages_nwis, by.x = "id", by.y = "site_no", all = T)
names_keep <- c("id", "agencyID", "long_ss", "lat_ss", "dec_long_va","dec_lat_va", "drain_area_va")
dif_nwis <- dif_ss_nwis[names_keep]
dif_nwis$nwis_proxy <- 0
dif_nwis[dif_nwis==-9999] <- NA
for (i in seq (1, nrow (dif_nwis))){
dif_nwis$nwis_proxy[i] <- distm(c(dif_nwis$long_ss[i], dif_nwis$lat_ss[i]), c(dif_nwis$dec_long_va[i], dif_nwis$dec_lat_va[i]), fun = distHaversine)
}
names (dif_nwis) <- c("id", "agencyid", "long_ss", "lat_ss", "long_nwis", "lat_nwis", "area_nwis", "nwis_proxy")
duplicated (dif_nwis$id)
any(duplicated(dif_nwis$id))
which (duplicated(dif_nwis$id))
dif_nwis[7116,]
dif_nwis[7133,]
dif_nwis[16474,]
dat_duplicated <- dif_nwis[which (duplicated(dif_nwis$id)),]
View(dat_duplicated)
which (dif_nwis$id == "05451500")
View(gages_nwis)
setwd("D:/Work/sedsatv2_shinyapp/resources/app/source")
shiny::runApp()
